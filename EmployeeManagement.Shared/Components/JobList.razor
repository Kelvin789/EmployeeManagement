@inject HttpClient Http
@inject NavigationManager Nav
@inject AppService App


@if (jobList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Actions</th>
                <th>Job Title</th>
                <th>Active Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var job in jobList)
            {
                <tr>
                    <td>
                        <button @onclick="() => EditJob(job)" type="button" class="btn btn-primary btn-sm" title="Edit Job">
                            <i class="fa-solid fa-user-pen"></i>
                        </button>
                    </td>
                    <td>@job.Title</td>
                    <td>@job.IsActive</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    public List<Job> jobList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync(URLStrings.ServerURL + "/job/getjobs");

        if (response.IsSuccessStatusCode)
        {
            jobList = await response.Content.ReadAsAsync<List<Job>>();
        }
    }

    void AddJob()
    {
        Nav.NavigateTo("AddJob");
    }

    void EditJob(Job job)
    {
        App.Job = job;
        Nav.NavigateTo("EditJob");
    }
}
